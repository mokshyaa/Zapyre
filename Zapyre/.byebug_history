cont
exit
current_user.cart.destroy
current_user.orders.first.products.where(id: 1).first.quantities.first.increment(:quantity , current_user.cart.products.first.quantities.first.quantity).save
current_user.orders.first.products.where(id: 1).first.quantities.first.increment(:quantity , current_user.cart.products.first.quantities.first.quantity)
current_user.orders.first.products.where(id: 1).first.quantities.first.increment(quantity: , current_user.cart.products.first.quantities.first.quantity)
current_user.orders.first.products.where(id: 1).first.quantities.first
current_user.orders.first.products.where(id: 1).first.quantities
current_user.orders.first.products.where(id: 1).first
current_user.orders.first.products.where(id: 1)
current_user.orders.products.where(id: 1)
current_user.cart.products.first.id
cont
exit
current_user.cart.products.each
current_user.orders.each
current_user.orders.each do 
current_user.orders.each do |order|
current_user.orders.first.products.first.quantities.first.increment(:quantity,current_user.cart.products.first.quantities.first.quantity).save
current_user.cart.products.first
current_user.cart.products
current_user.orders.first.products.first
current_user.orders.first.products
current_user.orders.first
cont
exit
cont
product.quantities.where(qnt_id:current_user.orders.first.id).first.quantity
product.quantities.where(qnt_id:current_user.orders.first.id
product.quantities.where(qnt_id:current_user.orders.first.id).first.quantity
cont
exit
product.quantities.where(qnt_id:current_user.orders.first.id).first.quantity
product.quantities.where(qnt_id:current_user.orders.first.id).first
product.quantities.where(qnt_id:current_user.orders.first.id)
product.quantities
product.quantitie
product
exit
@quantity.save
@quantity.qnt_id = current_user.orders.first.id
@quantity.save
@quantity
@quantity.qnt_type
@quantity.qnt_type.sub!(/Cart/, 'Order')
@quantity.qnt_type.sub(/Cart/, 'Order').update
@quantity.qnt_type.sub(/Cart/, 'Order')
insert.@quantity.qnt_type.sub(/Cart/, 'Order')
@quantity.qnt_type.sub(/Cart/, 'Order')
@quantity.qnt_type.'Order')
@quantity.qnt_type.sub(/Cart/, 'Order').insert
@quantity.qnt_type.sub(/Cart/, 'Order').inser
@quantity
@quantity.save
@quantity.qnt_type.sub(/Cart/, 'Order')
@quantity.qnt_type.sub(/Cart/, 'Order').update
@quantity.qnt_type.sub(/Cart/, 'Order').save
@quantity
@quantity.qnt_type.sub(/Cart/, 'Order')
@quantity
@quantity = cart_product.quantities.where(qnt_id: current_user.cart.id).first
@quantity = cart_ product.quantities.where(qnt_id: current_user.cart.id).first
@quantity = product.quantities.where(qnt_id: current_user.cart.id).first
current_user.cart.products.second.orders<<current_user.orders.first
current_user.cart.products.second
current_user.cart.products
cart_product.orders
cart_product.nil?
cart_product
cart_product.orders << current_user.orders.first
!cart_product.nil?
cart_product.nil?
cart_product.nil
current_user.orders.first
cont
exit
current_user.orders.first
cart_product.orders
cart_product
product
cont
exit
current_user.cart.products.first
current_user.cart.products.each
current_user.cart.products
current_user.cart
current_user
cont
exit
cont
exit
cont
@product.orders
@product
order
cont
exit
current_user.cart.products.first.quantities.first.qnt_type
current_user.cart.products.first.quantities.first
current_user.cart.products.first.quantities
current_user.cart.products.first.quantitties
current_user.cart.products.first
current_user.cart.products
current_user.cart.products.quanitities
cont
exit
@product.quantitiesexit
@product.quantities
@product
@product = order.products.where(id: params[:product_id].split[count].to_i).first
cont
@product.quantities.first.increment(:quantity, params[:quantity].to_i).save
@product = order.products.where(id: params[:product_id].split[count].to_i).first
@product = order.products.where(id: params[:product_id].split[count].to_i)
cont
exit
@product.orders << order
@product = Product.find((params[:product_id].split[count]).to_i)
current_user.orders
order
count+=1
@product.orders << order
@product = Product.find((params[:product_id].split[count]).to_i)
Product.find((params[:product_id].split[count]).to_i)
cont
exit
params[:product_id].split[0].to_i
params[:product_id].split[0]
params[:product_id].split.[0]
params[:product_id].split[1]
params[:product_id].split
params[:product_id][1]
params[:product_id]
cont
 Product.find((params[:product_id][count]).to_i)
cont
current_user.orders.reload 
cont
current_user.orders.first.products
current_user.orders.first
current_user.orders
current_user
order.products
order.products.where((params[:product_id][count]).to_i)
cont
p_qnts
p_ids
cont
exit
current_user.cart.quantity
current_user.cart
current_user
cart_product.quantities.first
cart_product.quantities
exit
product.quantities.first.increment(:quantity, params[:quantity].to_i).save
product.quantities.first.increment(:quantity, params[:quantity].to_i)
product.quantities.first
product.quantities.first.increment(:quantity, params[:quantity].to_i)
product.quantities.first
product.quantities.first.save
product.quantities.first.increment(:quantity, params[:quantity].to_i)
cont
current_user.wishlist.products.first
current_user.wishlist.products
current_user.wishlist.products.
current_user.wishlist.products.delete
current_user.wishlist.products.delete(current_user.wishlist)
current_user.wishlist.products.first.delete(current_user.wishlist)
current_user.wishlist.products.first.destroy(current_user.wishlist)
current_user.wishlist.products.first
current_user.wishlist.products
current_user.wishlist
wishlists_url
wishlist
wishlist'
@wishlist
current_user.wishlist
current_user.wishlist.products
exit
current_user.wishlist.products.where(id: params[:product_id].to_i).first.delete
current_user.wishlist.products.where(id: params[:product_id].to_i).first
current_user.wishlist.products.where(id: params[:product_id].to_i).destroy
current_user.wishlist.products.where(id: params[:product_id].to_i)
current_user.wishlist.products
current_user.wishlist.products.destroy
current_user.wishlist.products
current_user.wishlist.products.where(id: params[:product_id].to_i)
current_user.wishlist.products.where(id: params[:product_id].to_i).first
current_user.wishlist.products.where(id: params[:product_id].to_i)
current_user.wishlist.products.where(id:, params[:product_id].to_i)
current_user.wishlist.products.where(:id, params[:product_id].to_i)
current_user.wishlist.products.where(:id params[:product_id].to_i)
current_user.wishlist.products
current_user.wishlist
current_user
product.quantities.first.increment(:quantity, 6)
product.quantities.first.increment(:quantity 6)
product.quantities.first.quantity.increment
product.quantities.first.quantity
product.quantities.first.
product.quantities.first.quantity.new
product.quantities.first.save
product.quantities.first.quantity = 6
product.quantities.first.quantity
product.quantities.first
product.quantities.first.reload_product
product.quantities.first.reload_quantity
product.quantities.first.update_quantity
upda
product.quantities.first.quantity.save
product.quantities.first.quantity
product.quantities.first.quantity += params[:quantity].to_i
product.quantities.first.
product.quantities.first.quantity += params[:quantity].to_i
product.quantities.first
product.quantities.first.save
product.quantities.first.quantity += params[:quantity].to_i
 params[:quantity].to_i
product.quantities.first.quantity
cont
current_user.reload_cart
Cart.all
Cart
current_user.cart
current_user
current_user.cart.reload
current_user.cart
current_user.cart.reload
params[:quantity]
current_user.carts
current_user.cart
cont
current_user.cart
current_user.cart.reload!
current_user.cart.reload
current_user.cart
current_user
current_user.cart
Cart.first.user_id
Cart.first
current_user.cart
current_user
current_user.cart
  (Product.find(params[:product_id]).carts << current_user.cart) if params[:quantity].to_i > 0
 current_user.cart if params[:quantity].to_i > 0
 Product.find(params[:product_id]).carts
cont
@quantity
cont
product.quantities.first.save
product.quantities.first.quantity.save
product.quantities.first.quantity
product.quantities.first
product.quantities
product
